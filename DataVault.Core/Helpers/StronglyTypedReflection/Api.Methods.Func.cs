//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataVault.Core.Helpers.StronglyTypedReflection
{
    public static partial class ApiExtensions
    {
        public static global::System.Func<TResult> GetFunc<TResult>(this global::System.Object target, global::System.String name)
        {
            return target.GetMethod<global::System.Func<TResult>>(target.GetType(), name);
        }

        public static global::System.Func<TResult> GetFunc<TResult>(this global::System.Object target, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::System.Func<TResult>>(target.GetType(), name, flags);
        }

        public static global::System.Func<TResult> GetFunc<TResult>(this global::System.Type t, global::System.String name)
        {
            return ((global::System.Object)null).GetMethod<global::System.Func<TResult>>(t, name);
        }

        public static global::System.Func<TResult> GetFunc<TResult>(this global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return ((global::System.Object)null).GetMethod<global::System.Func<TResult>>(t, name, flags);
        }

        public static global::System.Func<TResult> GetFunc<TResult>(this global::System.Object target, global::System.Type t, global::System.String name)
        {
            return target.GetMethod<global::System.Func<TResult>>(t, name, global::DataVault.Core.Helpers.Reflection.Shortcuts.BF.All);
        }

        public static global::System.Func<TResult> GetFunc<TResult>(this global::System.Object target, global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::System.Func<TResult>>(t, name, flags);
        }
    }
}

namespace DataVault.Core.Helpers.StronglyTypedReflection
{
    public static partial class ApiExtensions
    {
        public static global::System.Func<T, TResult> GetFunc<T, TResult>(this global::System.Object target, global::System.String name)
        {
            return target.GetMethod<global::System.Func<T, TResult>>(target.GetType(), name);
        }

        public static global::System.Func<T, TResult> GetFunc<T, TResult>(this global::System.Object target, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::System.Func<T, TResult>>(target.GetType(), name, flags);
        }

        public static global::System.Func<T, TResult> GetFunc<T, TResult>(this global::System.Type t, global::System.String name)
        {
            return ((global::System.Object)null).GetMethod<global::System.Func<T, TResult>>(t, name);
        }

        public static global::System.Func<T, TResult> GetFunc<T, TResult>(this global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return ((global::System.Object)null).GetMethod<global::System.Func<T, TResult>>(t, name, flags);
        }

        public static global::System.Func<T, TResult> GetFunc<T, TResult>(this global::System.Object target, global::System.Type t, global::System.String name)
        {
            return target.GetMethod<global::System.Func<T, TResult>>(t, name, global::DataVault.Core.Helpers.Reflection.Shortcuts.BF.All);
        }

        public static global::System.Func<T, TResult> GetFunc<T, TResult>(this global::System.Object target, global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::System.Func<T, TResult>>(t, name, flags);
        }
    }
}

namespace DataVault.Core.Helpers.StronglyTypedReflection
{
    public static partial class ApiExtensions
    {
        public static global::System.Func<T1, T2, TResult> GetFunc<T1, T2, TResult>(this global::System.Object target, global::System.String name)
        {
            return target.GetMethod<global::System.Func<T1, T2, TResult>>(target.GetType(), name);
        }

        public static global::System.Func<T1, T2, TResult> GetFunc<T1, T2, TResult>(this global::System.Object target, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::System.Func<T1, T2, TResult>>(target.GetType(), name, flags);
        }

        public static global::System.Func<T1, T2, TResult> GetFunc<T1, T2, TResult>(this global::System.Type t, global::System.String name)
        {
            return ((global::System.Object)null).GetMethod<global::System.Func<T1, T2, TResult>>(t, name);
        }

        public static global::System.Func<T1, T2, TResult> GetFunc<T1, T2, TResult>(this global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return ((global::System.Object)null).GetMethod<global::System.Func<T1, T2, TResult>>(t, name, flags);
        }

        public static global::System.Func<T1, T2, TResult> GetFunc<T1, T2, TResult>(this global::System.Object target, global::System.Type t, global::System.String name)
        {
            return target.GetMethod<global::System.Func<T1, T2, TResult>>(t, name, global::DataVault.Core.Helpers.Reflection.Shortcuts.BF.All);
        }

        public static global::System.Func<T1, T2, TResult> GetFunc<T1, T2, TResult>(this global::System.Object target, global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::System.Func<T1, T2, TResult>>(t, name, flags);
        }
    }
}

namespace DataVault.Core.Helpers.StronglyTypedReflection
{
    public static partial class ApiExtensions
    {
        public static global::System.Func<T1, T2, T3, TResult> GetFunc<T1, T2, T3, TResult>(this global::System.Object target, global::System.String name)
        {
            return target.GetMethod<global::System.Func<T1, T2, T3, TResult>>(target.GetType(), name);
        }

        public static global::System.Func<T1, T2, T3, TResult> GetFunc<T1, T2, T3, TResult>(this global::System.Object target, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::System.Func<T1, T2, T3, TResult>>(target.GetType(), name, flags);
        }

        public static global::System.Func<T1, T2, T3, TResult> GetFunc<T1, T2, T3, TResult>(this global::System.Type t, global::System.String name)
        {
            return ((global::System.Object)null).GetMethod<global::System.Func<T1, T2, T3, TResult>>(t, name);
        }

        public static global::System.Func<T1, T2, T3, TResult> GetFunc<T1, T2, T3, TResult>(this global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return ((global::System.Object)null).GetMethod<global::System.Func<T1, T2, T3, TResult>>(t, name, flags);
        }

        public static global::System.Func<T1, T2, T3, TResult> GetFunc<T1, T2, T3, TResult>(this global::System.Object target, global::System.Type t, global::System.String name)
        {
            return target.GetMethod<global::System.Func<T1, T2, T3, TResult>>(t, name, global::DataVault.Core.Helpers.Reflection.Shortcuts.BF.All);
        }

        public static global::System.Func<T1, T2, T3, TResult> GetFunc<T1, T2, T3, TResult>(this global::System.Object target, global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::System.Func<T1, T2, T3, TResult>>(t, name, flags);
        }
    }
}

namespace DataVault.Core.Helpers.StronglyTypedReflection
{
    public static partial class ApiExtensions
    {
        public static global::System.Func<T1, T2, T3, T4, TResult> GetFunc<T1, T2, T3, T4, TResult>(this global::System.Object target, global::System.String name)
        {
            return target.GetMethod<global::System.Func<T1, T2, T3, T4, TResult>>(target.GetType(), name);
        }

        public static global::System.Func<T1, T2, T3, T4, TResult> GetFunc<T1, T2, T3, T4, TResult>(this global::System.Object target, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::System.Func<T1, T2, T3, T4, TResult>>(target.GetType(), name, flags);
        }

        public static global::System.Func<T1, T2, T3, T4, TResult> GetFunc<T1, T2, T3, T4, TResult>(this global::System.Type t, global::System.String name)
        {
            return ((global::System.Object)null).GetMethod<global::System.Func<T1, T2, T3, T4, TResult>>(t, name);
        }

        public static global::System.Func<T1, T2, T3, T4, TResult> GetFunc<T1, T2, T3, T4, TResult>(this global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return ((global::System.Object)null).GetMethod<global::System.Func<T1, T2, T3, T4, TResult>>(t, name, flags);
        }

        public static global::System.Func<T1, T2, T3, T4, TResult> GetFunc<T1, T2, T3, T4, TResult>(this global::System.Object target, global::System.Type t, global::System.String name)
        {
            return target.GetMethod<global::System.Func<T1, T2, T3, T4, TResult>>(t, name, global::DataVault.Core.Helpers.Reflection.Shortcuts.BF.All);
        }

        public static global::System.Func<T1, T2, T3, T4, TResult> GetFunc<T1, T2, T3, T4, TResult>(this global::System.Object target, global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::System.Func<T1, T2, T3, T4, TResult>>(t, name, flags);
        }
    }
}

namespace DataVault.Core.Helpers.StronglyTypedReflection
{
    public static partial class ApiExtensions
    {
        public static global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, TResult> GetFunc<T1, T2, T3, T4, T5, TResult>(this global::System.Object target, global::System.String name)
        {
            return target.GetMethod<global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, TResult>>(target.GetType(), name);
        }

        public static global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, TResult> GetFunc<T1, T2, T3, T4, T5, TResult>(this global::System.Object target, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, TResult>>(target.GetType(), name, flags);
        }

        public static global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, TResult> GetFunc<T1, T2, T3, T4, T5, TResult>(this global::System.Type t, global::System.String name)
        {
            return ((global::System.Object)null).GetMethod<global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, TResult>>(t, name);
        }

        public static global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, TResult> GetFunc<T1, T2, T3, T4, T5, TResult>(this global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return ((global::System.Object)null).GetMethod<global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, TResult>>(t, name, flags);
        }

        public static global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, TResult> GetFunc<T1, T2, T3, T4, T5, TResult>(this global::System.Object target, global::System.Type t, global::System.String name)
        {
            return target.GetMethod<global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, TResult>>(t, name, global::DataVault.Core.Helpers.Reflection.Shortcuts.BF.All);
        }

        public static global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, TResult> GetFunc<T1, T2, T3, T4, T5, TResult>(this global::System.Object target, global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, TResult>>(t, name, flags);
        }
    }
}

namespace DataVault.Core.Helpers.StronglyTypedReflection
{
    public static partial class ApiExtensions
    {
        public static global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, T6, TResult> GetFunc<T1, T2, T3, T4, T5, T6, TResult>(this global::System.Object target, global::System.String name)
        {
            return target.GetMethod<global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, T6, TResult>>(target.GetType(), name);
        }

        public static global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, T6, TResult> GetFunc<T1, T2, T3, T4, T5, T6, TResult>(this global::System.Object target, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, T6, TResult>>(target.GetType(), name, flags);
        }

        public static global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, T6, TResult> GetFunc<T1, T2, T3, T4, T5, T6, TResult>(this global::System.Type t, global::System.String name)
        {
            return ((global::System.Object)null).GetMethod<global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, T6, TResult>>(t, name);
        }

        public static global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, T6, TResult> GetFunc<T1, T2, T3, T4, T5, T6, TResult>(this global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return ((global::System.Object)null).GetMethod<global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, T6, TResult>>(t, name, flags);
        }

        public static global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, T6, TResult> GetFunc<T1, T2, T3, T4, T5, T6, TResult>(this global::System.Object target, global::System.Type t, global::System.String name)
        {
            return target.GetMethod<global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, T6, TResult>>(t, name, global::DataVault.Core.Helpers.Reflection.Shortcuts.BF.All);
        }

        public static global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, T6, TResult> GetFunc<T1, T2, T3, T4, T5, T6, TResult>(this global::System.Object target, global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, T6, TResult>>(t, name, flags);
        }
    }
}

namespace DataVault.Core.Helpers.StronglyTypedReflection
{
    public static partial class ApiExtensions
    {
        public static global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, T6, T7, TResult> GetFunc<T1, T2, T3, T4, T5, T6, T7, TResult>(this global::System.Object target, global::System.String name)
        {
            return target.GetMethod<global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, T6, T7, TResult>>(target.GetType(), name);
        }

        public static global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, T6, T7, TResult> GetFunc<T1, T2, T3, T4, T5, T6, T7, TResult>(this global::System.Object target, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, T6, T7, TResult>>(target.GetType(), name, flags);
        }

        public static global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, T6, T7, TResult> GetFunc<T1, T2, T3, T4, T5, T6, T7, TResult>(this global::System.Type t, global::System.String name)
        {
            return ((global::System.Object)null).GetMethod<global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, T6, T7, TResult>>(t, name);
        }

        public static global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, T6, T7, TResult> GetFunc<T1, T2, T3, T4, T5, T6, T7, TResult>(this global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return ((global::System.Object)null).GetMethod<global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, T6, T7, TResult>>(t, name, flags);
        }

        public static global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, T6, T7, TResult> GetFunc<T1, T2, T3, T4, T5, T6, T7, TResult>(this global::System.Object target, global::System.Type t, global::System.String name)
        {
            return target.GetMethod<global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, T6, T7, TResult>>(t, name, global::DataVault.Core.Helpers.Reflection.Shortcuts.BF.All);
        }

        public static global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, T6, T7, TResult> GetFunc<T1, T2, T3, T4, T5, T6, T7, TResult>(this global::System.Object target, global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::DataVault.Core.Helpers.Func<T1, T2, T3, T4, T5, T6, T7, TResult>>(t, name, flags);
        }
    }
}

