//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataVault.Core.Helpers.StronglyTypedReflection
{
    public static partial class ApiExtensions
    {
        public static global::System.Action GetAction(this global::System.Object target, global::System.String name)
        {
            return target.GetMethod<global::System.Action>(target.GetType(), name);
        }

        public static global::System.Action GetAction(this global::System.Object target, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::System.Action>(target.GetType(), name, flags);
        }

        public static global::System.Action GetAction(this global::System.Type t, global::System.String name)
        {
            return ((global::System.Object)null).GetMethod<global::System.Action>(t, name);
        }

        public static global::System.Action GetAction(this global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return ((global::System.Object)null).GetMethod<global::System.Action>(t, name, flags);
        }

        public static global::System.Action GetAction(this global::System.Object target, global::System.Type t, global::System.String name)
        {
            return target.GetMethod<global::System.Action>(t, name, global::DataVault.Core.Helpers.Reflection.Shortcuts.BF.All);
        }

        public static global::System.Action GetAction(this global::System.Object target, global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::System.Action>(t, name, flags);
        }
    }
}

namespace DataVault.Core.Helpers.StronglyTypedReflection
{
    public static partial class ApiExtensions
    {
        public static global::System.Action<T> GetAction<T>(this global::System.Object target, global::System.String name)
        {
            return target.GetMethod<global::System.Action<T>>(target.GetType(), name);
        }

        public static global::System.Action<T> GetAction<T>(this global::System.Object target, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::System.Action<T>>(target.GetType(), name, flags);
        }

        public static global::System.Action<T> GetAction<T>(this global::System.Type t, global::System.String name)
        {
            return ((global::System.Object)null).GetMethod<global::System.Action<T>>(t, name);
        }

        public static global::System.Action<T> GetAction<T>(this global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return ((global::System.Object)null).GetMethod<global::System.Action<T>>(t, name, flags);
        }

        public static global::System.Action<T> GetAction<T>(this global::System.Object target, global::System.Type t, global::System.String name)
        {
            return target.GetMethod<global::System.Action<T>>(t, name, global::DataVault.Core.Helpers.Reflection.Shortcuts.BF.All);
        }

        public static global::System.Action<T> GetAction<T>(this global::System.Object target, global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::System.Action<T>>(t, name, flags);
        }
    }
}

namespace DataVault.Core.Helpers.StronglyTypedReflection
{
    public static partial class ApiExtensions
    {
        public static global::System.Action<T1, T2> GetAction<T1, T2>(this global::System.Object target, global::System.String name)
        {
            return target.GetMethod<global::System.Action<T1, T2>>(target.GetType(), name);
        }

        public static global::System.Action<T1, T2> GetAction<T1, T2>(this global::System.Object target, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::System.Action<T1, T2>>(target.GetType(), name, flags);
        }

        public static global::System.Action<T1, T2> GetAction<T1, T2>(this global::System.Type t, global::System.String name)
        {
            return ((global::System.Object)null).GetMethod<global::System.Action<T1, T2>>(t, name);
        }

        public static global::System.Action<T1, T2> GetAction<T1, T2>(this global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return ((global::System.Object)null).GetMethod<global::System.Action<T1, T2>>(t, name, flags);
        }

        public static global::System.Action<T1, T2> GetAction<T1, T2>(this global::System.Object target, global::System.Type t, global::System.String name)
        {
            return target.GetMethod<global::System.Action<T1, T2>>(t, name, global::DataVault.Core.Helpers.Reflection.Shortcuts.BF.All);
        }

        public static global::System.Action<T1, T2> GetAction<T1, T2>(this global::System.Object target, global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::System.Action<T1, T2>>(t, name, flags);
        }
    }
}

namespace DataVault.Core.Helpers.StronglyTypedReflection
{
    public static partial class ApiExtensions
    {
        public static global::System.Action<T1, T2, T3> GetAction<T1, T2, T3>(this global::System.Object target, global::System.String name)
        {
            return target.GetMethod<global::System.Action<T1, T2, T3>>(target.GetType(), name);
        }

        public static global::System.Action<T1, T2, T3> GetAction<T1, T2, T3>(this global::System.Object target, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::System.Action<T1, T2, T3>>(target.GetType(), name, flags);
        }

        public static global::System.Action<T1, T2, T3> GetAction<T1, T2, T3>(this global::System.Type t, global::System.String name)
        {
            return ((global::System.Object)null).GetMethod<global::System.Action<T1, T2, T3>>(t, name);
        }

        public static global::System.Action<T1, T2, T3> GetAction<T1, T2, T3>(this global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return ((global::System.Object)null).GetMethod<global::System.Action<T1, T2, T3>>(t, name, flags);
        }

        public static global::System.Action<T1, T2, T3> GetAction<T1, T2, T3>(this global::System.Object target, global::System.Type t, global::System.String name)
        {
            return target.GetMethod<global::System.Action<T1, T2, T3>>(t, name, global::DataVault.Core.Helpers.Reflection.Shortcuts.BF.All);
        }

        public static global::System.Action<T1, T2, T3> GetAction<T1, T2, T3>(this global::System.Object target, global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::System.Action<T1, T2, T3>>(t, name, flags);
        }
    }
}

namespace DataVault.Core.Helpers.StronglyTypedReflection
{
    public static partial class ApiExtensions
    {
        public static global::System.Action<T1, T2, T3, T4> GetAction<T1, T2, T3, T4>(this global::System.Object target, global::System.String name)
        {
            return target.GetMethod<global::System.Action<T1, T2, T3, T4>>(target.GetType(), name);
        }

        public static global::System.Action<T1, T2, T3, T4> GetAction<T1, T2, T3, T4>(this global::System.Object target, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::System.Action<T1, T2, T3, T4>>(target.GetType(), name, flags);
        }

        public static global::System.Action<T1, T2, T3, T4> GetAction<T1, T2, T3, T4>(this global::System.Type t, global::System.String name)
        {
            return ((global::System.Object)null).GetMethod<global::System.Action<T1, T2, T3, T4>>(t, name);
        }

        public static global::System.Action<T1, T2, T3, T4> GetAction<T1, T2, T3, T4>(this global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return ((global::System.Object)null).GetMethod<global::System.Action<T1, T2, T3, T4>>(t, name, flags);
        }

        public static global::System.Action<T1, T2, T3, T4> GetAction<T1, T2, T3, T4>(this global::System.Object target, global::System.Type t, global::System.String name)
        {
            return target.GetMethod<global::System.Action<T1, T2, T3, T4>>(t, name, global::DataVault.Core.Helpers.Reflection.Shortcuts.BF.All);
        }

        public static global::System.Action<T1, T2, T3, T4> GetAction<T1, T2, T3, T4>(this global::System.Object target, global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::System.Action<T1, T2, T3, T4>>(t, name, flags);
        }
    }
}

namespace DataVault.Core.Helpers.StronglyTypedReflection
{
    public static partial class ApiExtensions
    {
        public static global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5> GetAction<T1, T2, T3, T4, T5>(this global::System.Object target, global::System.String name)
        {
            return target.GetMethod<global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5>>(target.GetType(), name);
        }

        public static global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5> GetAction<T1, T2, T3, T4, T5>(this global::System.Object target, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5>>(target.GetType(), name, flags);
        }

        public static global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5> GetAction<T1, T2, T3, T4, T5>(this global::System.Type t, global::System.String name)
        {
            return ((global::System.Object)null).GetMethod<global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5>>(t, name);
        }

        public static global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5> GetAction<T1, T2, T3, T4, T5>(this global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return ((global::System.Object)null).GetMethod<global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5>>(t, name, flags);
        }

        public static global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5> GetAction<T1, T2, T3, T4, T5>(this global::System.Object target, global::System.Type t, global::System.String name)
        {
            return target.GetMethod<global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5>>(t, name, global::DataVault.Core.Helpers.Reflection.Shortcuts.BF.All);
        }

        public static global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5> GetAction<T1, T2, T3, T4, T5>(this global::System.Object target, global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5>>(t, name, flags);
        }
    }
}

namespace DataVault.Core.Helpers.StronglyTypedReflection
{
    public static partial class ApiExtensions
    {
        public static global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5, T6> GetAction<T1, T2, T3, T4, T5, T6>(this global::System.Object target, global::System.String name)
        {
            return target.GetMethod<global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5, T6>>(target.GetType(), name);
        }

        public static global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5, T6> GetAction<T1, T2, T3, T4, T5, T6>(this global::System.Object target, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5, T6>>(target.GetType(), name, flags);
        }

        public static global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5, T6> GetAction<T1, T2, T3, T4, T5, T6>(this global::System.Type t, global::System.String name)
        {
            return ((global::System.Object)null).GetMethod<global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5, T6>>(t, name);
        }

        public static global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5, T6> GetAction<T1, T2, T3, T4, T5, T6>(this global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return ((global::System.Object)null).GetMethod<global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5, T6>>(t, name, flags);
        }

        public static global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5, T6> GetAction<T1, T2, T3, T4, T5, T6>(this global::System.Object target, global::System.Type t, global::System.String name)
        {
            return target.GetMethod<global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5, T6>>(t, name, global::DataVault.Core.Helpers.Reflection.Shortcuts.BF.All);
        }

        public static global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5, T6> GetAction<T1, T2, T3, T4, T5, T6>(this global::System.Object target, global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5, T6>>(t, name, flags);
        }
    }
}

namespace DataVault.Core.Helpers.StronglyTypedReflection
{
    public static partial class ApiExtensions
    {
        public static global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5, T6, T7> GetAction<T1, T2, T3, T4, T5, T6, T7>(this global::System.Object target, global::System.String name)
        {
            return target.GetMethod<global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5, T6, T7>>(target.GetType(), name);
        }

        public static global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5, T6, T7> GetAction<T1, T2, T3, T4, T5, T6, T7>(this global::System.Object target, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5, T6, T7>>(target.GetType(), name, flags);
        }

        public static global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5, T6, T7> GetAction<T1, T2, T3, T4, T5, T6, T7>(this global::System.Type t, global::System.String name)
        {
            return ((global::System.Object)null).GetMethod<global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5, T6, T7>>(t, name);
        }

        public static global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5, T6, T7> GetAction<T1, T2, T3, T4, T5, T6, T7>(this global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return ((global::System.Object)null).GetMethod<global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5, T6, T7>>(t, name, flags);
        }

        public static global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5, T6, T7> GetAction<T1, T2, T3, T4, T5, T6, T7>(this global::System.Object target, global::System.Type t, global::System.String name)
        {
            return target.GetMethod<global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5, T6, T7>>(t, name, global::DataVault.Core.Helpers.Reflection.Shortcuts.BF.All);
        }

        public static global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5, T6, T7> GetAction<T1, T2, T3, T4, T5, T6, T7>(this global::System.Object target, global::System.Type t, global::System.String name, global::System.Reflection.BindingFlags flags)
        {
            return target.GetMethod<global::DataVault.Core.Helpers.Action<T1, T2, T3, T4, T5, T6, T7>>(t, name, flags);
        }
    }
}

