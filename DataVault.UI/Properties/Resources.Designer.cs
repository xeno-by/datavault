//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataVault.UI.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DataVault.UI.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will extract the file into a temporary directory and attempt to open it with an appropriate software. Do you wish to continue?.
        /// </summary>
        public static string BinaryType_ConfirmExtractionToView {
            get {
                return ResourceManager.GetString("BinaryType_ConfirmExtractionToView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;content has been cleared&gt;.
        /// </summary>
        public static string BinaryType_ContentCleared {
            get {
                return ResourceManager.GetString("BinaryType_ContentCleared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;content has not been edited yet&gt;.
        /// </summary>
        public static string BinaryType_ContentNotEditedYet {
            get {
                return ResourceManager.GetString("BinaryType_ContentNotEditedYet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;binary&gt;.
        /// </summary>
        public static string BinaryType_ContentStringStub {
            get {
                return ResourceManager.GetString("BinaryType_ContentStringStub", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error opening content file.
        /// </summary>
        public static string BinaryType_ErrorOpeningContentFile {
            get {
                return ResourceManager.GetString("BinaryType_ErrorOpeningContentFile", resourceCulture);
            }
        }
        
        public static System.Drawing.Bitmap BrowseFolders {
            get {
                object obj = ResourceManager.GetObject("BrowseFolders", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap BrowserBack {
            get {
                object obj = ResourceManager.GetObject("BrowserBack", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataVault Browser (version {0}, format {1}) - {2}.
        /// </summary>
        public static string BrowserForm_Title {
            get {
                return ResourceManager.GetString("BrowserForm_Title", resourceCulture);
            }
        }
        
        public static System.Drawing.Bitmap BrowserForward {
            get {
                object obj = ResourceManager.GetObject("BrowserForward", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        public static System.Drawing.Bitmap BrowserUp {
            get {
                object obj = ResourceManager.GetObject("BrowserUp", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save and Close | Don&apos;t Save | {Cancel}.
        /// </summary>
        public static string CloseVaultWhenDirty_Buttons {
            get {
                return ResourceManager.GetString("CloseVaultWhenDirty_Buttons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation you&apos;re about to perform will close current vault. However this vault has some unsaved changes. Please, resolve the conflict.
        ///
        ///* &quot;Save and Close&quot; will save changes to the vault and then close it.
        ///* &quot;Don&apos;t Save&quot; will close the vault and discard all unsaved changes.
        ///* &quot;Cancel&quot; will cancel the operation and leave the vault open to perform manual fixup..
        /// </summary>
        public static string CloseVaultWhenDirty_Message {
            get {
                return ResourceManager.GetString("CloseVaultWhenDirty_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attention Required.
        /// </summary>
        public static string CloseVaultWhenDirty_Title {
            get {
                return ResourceManager.GetString("CloseVaultWhenDirty_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command &apos;{0}&apos; failed. As a result, YOUR DATA MIGHT HAVE BEEN LOST. Please, contact the developer for further instructions.
        ///
        ///Error was caused by an unhandled exception: &apos;{1}&apos;..
        /// </summary>
        public static string CommandFailed_Message {
            get {
                return ResourceManager.GetString("CommandFailed_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Critical error.
        /// </summary>
        public static string CommandFailed_Title {
            get {
                return ResourceManager.GetString("CommandFailed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm.
        /// </summary>
        public static string Confirmation_Title {
            get {
                return ResourceManager.GetString("Confirmation_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Прервать.
        /// </summary>
        public static string CustomMessageBox_Abort {
            get {
                return ResourceManager.GetString("CustomMessageBox_Abort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Отмена.
        /// </summary>
        public static string CustomMessageBox_Cancel {
            get {
                return ResourceManager.GetString("CustomMessageBox_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Пропустить.
        /// </summary>
        public static string CustomMessageBox_Ignore {
            get {
                return ResourceManager.GetString("CustomMessageBox_Ignore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Нет.
        /// </summary>
        public static string CustomMessageBox_No {
            get {
                return ResourceManager.GetString("CustomMessageBox_No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ОК.
        /// </summary>
        public static string CustomMessageBox_Ok {
            get {
                return ResourceManager.GetString("CustomMessageBox_Ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Повторить.
        /// </summary>
        public static string CustomMessageBox_Retry {
            get {
                return ResourceManager.GetString("CustomMessageBox_Retry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Да.
        /// </summary>
        public static string CustomMessageBox_Yes {
            get {
                return ResourceManager.GetString("CustomMessageBox_Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (default).
        /// </summary>
        public static string Default {
            get {
                return ResourceManager.GetString("Default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Content:.
        /// </summary>
        public static string DefaultEditMetadataForm_SectionTab_Content {
            get {
                return ResourceManager.GetString("DefaultEditMetadataForm_SectionTab_Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name:.
        /// </summary>
        public static string DefaultEditMetadataForm_SectionTab_Name {
            get {
                return ResourceManager.GetString("DefaultEditMetadataForm_SectionTab_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation will overwrite the file you&apos;ve selected. Do you wish to  continue?.
        /// </summary>
        public static string Dialogs_BrowseForFile_ConfirmOverwrite_Message {
            get {
                return ResourceManager.GetString("Dialogs_BrowseForFile_ConfirmOverwrite_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm.
        /// </summary>
        public static string Dialogs_BrowseForFile_ConfirmOverwrite_Title {
            get {
                return ResourceManager.GetString("Dialogs_BrowseForFile_ConfirmOverwrite_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file you&apos;ve selected doesn&apos;t exist. Please, select an existing file..
        /// </summary>
        public static string Dialogs_BrowseForFile_FileDoesNotExist_Message {
            get {
                return ResourceManager.GetString("Dialogs_BrowseForFile_FileDoesNotExist_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string Dialogs_BrowseForFile_FileDoesNotExist_Title {
            get {
                return ResourceManager.GetString("Dialogs_BrowseForFile_FileDoesNotExist_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File name:.
        /// </summary>
        public static string Dialogs_BrowseForFile_FileNameLabel {
            get {
                return ResourceManager.GetString("Dialogs_BrowseForFile_FileNameLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder is not a valid selection for this dialog. Please, select a file..
        /// </summary>
        public static string Dialogs_BrowseForFile_FolderIsNotValidHere_Message {
            get {
                return ResourceManager.GetString("Dialogs_BrowseForFile_FolderIsNotValidHere_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string Dialogs_BrowseForFile_FolderIsNotValidHere_Title {
            get {
                return ResourceManager.GetString("Dialogs_BrowseForFile_FolderIsNotValidHere_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file name you&apos;ve entered doesn&apos;t point to a valid location in a file system. Please, select another file..
        /// </summary>
        public static string Dialogs_BrowseForFile_NotAFileSystemLocation_Message {
            get {
                return ResourceManager.GetString("Dialogs_BrowseForFile_NotAFileSystemLocation_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string Dialogs_BrowseForFile_NotAFileSystemLocation_Title {
            get {
                return ResourceManager.GetString("Dialogs_BrowseForFile_NotAFileSystemLocation_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation will overwrite the folder you&apos;ve selected. Do you wish to  continue?.
        /// </summary>
        public static string Dialogs_BrowseForFolder_ConfirmOverwrite_Message {
            get {
                return ResourceManager.GetString("Dialogs_BrowseForFolder_ConfirmOverwrite_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm.
        /// </summary>
        public static string Dialogs_BrowseForFolder_ConfirmOverwrite_Title {
            get {
                return ResourceManager.GetString("Dialogs_BrowseForFolder_ConfirmOverwrite_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File is not a valid selection for this dialog. Please, select a folder..
        /// </summary>
        public static string Dialogs_BrowseForFolder_FileIsNotValidHere_Message {
            get {
                return ResourceManager.GetString("Dialogs_BrowseForFolder_FileIsNotValidHere_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string Dialogs_BrowseForFolder_FileIsNotValidHere_Title {
            get {
                return ResourceManager.GetString("Dialogs_BrowseForFolder_FileIsNotValidHere_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The folder you&apos;ve selected doesn&apos;t exist. Please, select an existing folder..
        /// </summary>
        public static string Dialogs_BrowseForFolder_FolderDoesNotExist_Message {
            get {
                return ResourceManager.GetString("Dialogs_BrowseForFolder_FolderDoesNotExist_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string Dialogs_BrowseForFolder_FolderDoesNotExist_Title {
            get {
                return ResourceManager.GetString("Dialogs_BrowseForFolder_FolderDoesNotExist_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder name:.
        /// </summary>
        public static string Dialogs_BrowseForFolder_FolderNameLabel {
            get {
                return ResourceManager.GetString("Dialogs_BrowseForFolder_FolderNameLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The folder name you&apos;ve entered doesn&apos;t point to a valid location in a file system. Please, select another folder..
        /// </summary>
        public static string Dialogs_BrowseForFolder_NotAFileSystemLocation_Message {
            get {
                return ResourceManager.GetString("Dialogs_BrowseForFolder_NotAFileSystemLocation_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string Dialogs_BrowseForFolder_NotAFileSystemLocation_Title {
            get {
                return ResourceManager.GetString("Dialogs_BrowseForFolder_NotAFileSystemLocation_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string Error_Title {
            get {
                return ResourceManager.GetString("Error_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your exit attempt has just failed due to an unexpected error. If this error persists the application wouldn&apos;t be able to shut down by itself.
        ///
        ///The best bet would be to contact the developer for further instructions. Another option would be to forcibly close the application with a danger of DATA LOSS.
        ///
        ///Do you wish to force application exit and accept risks of potential data loss (Yes) or return to application and try again (No)?.
        /// </summary>
        public static string ExitFailedDueToAnException_Message {
            get {
                return ResourceManager.GetString("ExitFailedDueToAnException_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Critical error.
        /// </summary>
        public static string ExitFailedDueToAnException_Title {
            get {
                return ResourceManager.GetString("ExitFailedDueToAnException_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The import operation will replace all content of the vault being edited. Do you wish to continue?.
        /// </summary>
        public static string Import_Precaution_Message {
            get {
                return ResourceManager.GetString("Import_Precaution_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm.
        /// </summary>
        public static string Import_Precaution_Title {
            get {
                return ResourceManager.GetString("Import_Precaution_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataVault Editor (version {0}, format {1}) - {2}.
        /// </summary>
        public static string MainForm_Title {
            get {
                return ResourceManager.GetString("MainForm_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to N/A.
        /// </summary>
        public static string MainForm_Title_NA {
            get {
                return ResourceManager.GetString("MainForm_Title_NA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New branch {0}.
        /// </summary>
        public static string New_BranchDefaultName {
            get {
                return ResourceManager.GetString("New_BranchDefaultName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} ({1}).
        /// </summary>
        public static string New_BranchDefaultPastedName {
            get {
                return ResourceManager.GetString("New_BranchDefaultPastedName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New section {0}.
        /// </summary>
        public static string New_MetadataSectionDefaultName {
            get {
                return ResourceManager.GetString("New_MetadataSectionDefaultName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New &amp;binary value.
        /// </summary>
        public static string New_ValueBinary {
            get {
                return ResourceManager.GetString("New_ValueBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New value {0}.
        /// </summary>
        public static string New_ValueDefaultName {
            get {
                return ResourceManager.GetString("New_ValueDefaultName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} ({1}).
        /// </summary>
        public static string New_ValueDefaultPastedName {
            get {
                return ResourceManager.GetString("New_ValueDefaultPastedName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New &amp;text value.
        /// </summary>
        public static string New_ValueText {
            get {
                return ResourceManager.GetString("New_ValueText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot open vault at url &apos;{0}&apos;. It has unrecognized format (attempted the following formats: {1})..
        /// </summary>
        public static string ShellIntegration_UnknownFormat_Message {
            get {
                return ResourceManager.GetString("ShellIntegration_UnknownFormat_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string ShellIntegration_UnknownFormat_Title {
            get {
                return ResourceManager.GetString("ShellIntegration_UnknownFormat_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vault.
        /// </summary>
        public static string Tree_Root {
            get {
                return ResourceManager.GetString("Tree_Root", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Branch with the name &apos;{0}&apos; already exists.
        /// </summary>
        public static string Validation_DuplicateBranchName {
            get {
                return ResourceManager.GetString("Validation_DuplicateBranchName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value with the name &apos;{0}&apos; already exists.
        /// </summary>
        public static string Validation_DuplicateValueName {
            get {
                return ResourceManager.GetString("Validation_DuplicateValueName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Underlying folder is corrupted or not a fs vault.
        /// </summary>
        public static string Validation_InvalidFsVault {
            get {
                return ResourceManager.GetString("Validation_InvalidFsVault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not a valid name.
        /// </summary>
        public static string Validation_InvalidName {
            get {
                return ResourceManager.GetString("Validation_InvalidName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Underlying file is corrupted or not an xml vault.
        /// </summary>
        public static string Validation_InvalidXmlVault {
            get {
                return ResourceManager.GetString("Validation_InvalidXmlVault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Underlying file is corrupted or not a zip vault.
        /// </summary>
        public static string Validation_InvalidZipVault {
            get {
                return ResourceManager.GetString("Validation_InvalidZipVault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source and target uris of an export or import operation cannot be the same..
        /// </summary>
        public static string Validation_SourceAndTargetOfExportImportAreTheSame {
            get {
                return ResourceManager.GetString("Validation_SourceAndTargetOfExportImportAreTheSame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validation failed.
        /// </summary>
        public static string Validation_Title {
            get {
                return ResourceManager.GetString("Validation_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please, select the type.
        /// </summary>
        public static string Validation_ValueTypeNotSelected {
            get {
                return ResourceManager.GetString("Validation_ValueTypeNotSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Binary.
        /// </summary>
        public static string ValueType_Binary {
            get {
                return ResourceManager.GetString("ValueType_Binary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (not selected).
        /// </summary>
        public static string ValueType_NotSelected {
            get {
                return ResourceManager.GetString("ValueType_NotSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text.
        /// </summary>
        public static string ValueType_Text {
            get {
                return ResourceManager.GetString("ValueType_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to process value with content type &apos;{0}&apos;. Make sure that you have all plugins to DataVault.UI that were used to create the vault..
        /// </summary>
        public static string ValueType_Unknown_Fatal {
            get {
                return ResourceManager.GetString("ValueType_Unknown_Fatal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;unknown: {0}&gt;.
        /// </summary>
        public static string ValueType_Unknown_Warning {
            get {
                return ResourceManager.GetString("ValueType_Unknown_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The uri you&apos;ve selected already hosts a vault. To proceed the DataVault editor needs to delete it. Do you wish to continue?.
        /// </summary>
        public static string VaultFormat_ExistingFileBasedVault_Message {
            get {
                return ResourceManager.GetString("VaultFormat_ExistingFileBasedVault_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm.
        /// </summary>
        public static string VaultFormat_ExistingFileBasedVault_Title {
            get {
                return ResourceManager.GetString("VaultFormat_ExistingFileBasedVault_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The uri you&apos;ve selected already hosts a repository. To proceed the DataVault editor needs to delete it. Do you wish to continue?.
        /// </summary>
        public static string VaultFormat_ExistingFsVault_Message {
            get {
                return ResourceManager.GetString("VaultFormat_ExistingFsVault_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm.
        /// </summary>
        public static string VaultFormat_ExistingFsVault_Title {
            get {
                return ResourceManager.GetString("VaultFormat_ExistingFsVault_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating a vault &gt; Select a directory to store vault&apos;s files.
        /// </summary>
        public static string VaultFormat_Fs_DialogTitle_Create {
            get {
                return ResourceManager.GetString("VaultFormat_Fs_DialogTitle_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exporting into a vault &gt; Select a directory that stores target vault&apos;s files.
        /// </summary>
        public static string VaultFormat_Fs_DialogTitle_Export {
            get {
                return ResourceManager.GetString("VaultFormat_Fs_DialogTitle_Export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Importing from a vault &gt; Select a directory that stores source vault&apos;s files.
        /// </summary>
        public static string VaultFormat_Fs_DialogTitle_Import {
            get {
                return ResourceManager.GetString("VaultFormat_Fs_DialogTitle_Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opening a vault &gt; Select a directory that stores vault&apos;s files.
        /// </summary>
        public static string VaultFormat_Fs_DialogTitle_Open {
            get {
                return ResourceManager.GetString("VaultFormat_Fs_DialogTitle_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FS.
        /// </summary>
        public static string VaultFormat_Fs_TabTitle_Create {
            get {
                return ResourceManager.GetString("VaultFormat_Fs_TabTitle_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FS.
        /// </summary>
        public static string VaultFormat_Fs_TabTitle_Export {
            get {
                return ResourceManager.GetString("VaultFormat_Fs_TabTitle_Export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FS.
        /// </summary>
        public static string VaultFormat_Fs_TabTitle_Import {
            get {
                return ResourceManager.GetString("VaultFormat_Fs_TabTitle_Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FS.
        /// </summary>
        public static string VaultFormat_Fs_TabTitle_Open {
            get {
                return ResourceManager.GetString("VaultFormat_Fs_TabTitle_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm.
        /// </summary>
        public static string VaultFormat_NoIndexFileFsUr_Title {
            get {
                return ResourceManager.GetString("VaultFormat_NoIndexFileFsUr_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The uri you&apos;ve selected doesn&apos;t contain an index file of an fs vault. Opening such vault might still be possible tho it might take excessive amount of time or even crash. Do you wish to continue?.
        /// </summary>
        public static string VaultFormat_NoIndexFileFsUri_Message {
            get {
                return ResourceManager.GetString("VaultFormat_NoIndexFileFsUri_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The uri you&apos;ve selected is not empty. Thus, during its work the DataVault editor might overwrite existing files or directories if it will be required for storing vault data. Do you wish to continue?.
        /// </summary>
        public static string VaultFormat_NonEmptyFsUri_Message {
            get {
                return ResourceManager.GetString("VaultFormat_NonEmptyFsUri_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm.
        /// </summary>
        public static string VaultFormat_NonEmptyFsUri_Title {
            get {
                return ResourceManager.GetString("VaultFormat_NonEmptyFsUri_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating a vault &gt; Select a file in xml format.
        /// </summary>
        public static string VaultFormat_Xml_DialogTitle_Create {
            get {
                return ResourceManager.GetString("VaultFormat_Xml_DialogTitle_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exporting into a vault &gt; Select target file in xml format.
        /// </summary>
        public static string VaultFormat_Xml_DialogTitle_Export {
            get {
                return ResourceManager.GetString("VaultFormat_Xml_DialogTitle_Export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Importing from a vault &gt; Select source file in xml format.
        /// </summary>
        public static string VaultFormat_Xml_DialogTitle_Import {
            get {
                return ResourceManager.GetString("VaultFormat_Xml_DialogTitle_Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opening a vault &gt; Select a file in xml format.
        /// </summary>
        public static string VaultFormat_Xml_DialogTitle_Open {
            get {
                return ResourceManager.GetString("VaultFormat_Xml_DialogTitle_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML.
        /// </summary>
        public static string VaultFormat_Xml_TabTitle_Create {
            get {
                return ResourceManager.GetString("VaultFormat_Xml_TabTitle_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML.
        /// </summary>
        public static string VaultFormat_Xml_TabTitle_Export {
            get {
                return ResourceManager.GetString("VaultFormat_Xml_TabTitle_Export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML.
        /// </summary>
        public static string VaultFormat_Xml_TabTitle_Import {
            get {
                return ResourceManager.GetString("VaultFormat_Xml_TabTitle_Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML.
        /// </summary>
        public static string VaultFormat_Xml_TabTitle_Open {
            get {
                return ResourceManager.GetString("VaultFormat_Xml_TabTitle_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating a vault &gt; Select a file in zip format.
        /// </summary>
        public static string VaultFormat_Zip_DialogTitle_Create {
            get {
                return ResourceManager.GetString("VaultFormat_Zip_DialogTitle_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exporting into a vault &gt; Select target file in zip format.
        /// </summary>
        public static string VaultFormat_Zip_DialogTitle_Export {
            get {
                return ResourceManager.GetString("VaultFormat_Zip_DialogTitle_Export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Importing from a vault &gt; Select source file in zip format.
        /// </summary>
        public static string VaultFormat_Zip_DialogTitle_Import {
            get {
                return ResourceManager.GetString("VaultFormat_Zip_DialogTitle_Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opening a vault &gt; Select a file in zip format.
        /// </summary>
        public static string VaultFormat_Zip_DialogTitle_Open {
            get {
                return ResourceManager.GetString("VaultFormat_Zip_DialogTitle_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zip.
        /// </summary>
        public static string VaultFormat_Zip_TabTitle_Create {
            get {
                return ResourceManager.GetString("VaultFormat_Zip_TabTitle_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zip.
        /// </summary>
        public static string VaultFormat_Zip_TabTitle_Export {
            get {
                return ResourceManager.GetString("VaultFormat_Zip_TabTitle_Export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zip.
        /// </summary>
        public static string VaultFormat_Zip_TabTitle_Import {
            get {
                return ResourceManager.GetString("VaultFormat_Zip_TabTitle_Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zip.
        /// </summary>
        public static string VaultFormat_Zip_TabTitle_Open {
            get {
                return ResourceManager.GetString("VaultFormat_Zip_TabTitle_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to N/A.
        /// </summary>
        public static string Version_Empty {
            get {
                return ResourceManager.GetString("Version_Empty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The vault you&apos;re opening has an unknown version &apos;{0}&apos;. You won&apos;t be able to work with the vault using the current version of the application. Please, contact your system administrator..
        /// </summary>
        public static string Version_UnknownVersion {
            get {
                return ResourceManager.GetString("Version_UnknownVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string Version_UnknownVersion_Title {
            get {
                return ResourceManager.GetString("Version_UnknownVersion_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrading vault from version &apos;{0}&apos; to version &apos;{1}&apos; (current) has failed. No data was lost, but you won&apos;t be able to work with the vault using the current version of the application..
        /// </summary>
        public static string Version_UpgradeFailed {
            get {
                return ResourceManager.GetString("Version_UpgradeFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrade failed.
        /// </summary>
        public static string Version_UpgradeFailed_Title {
            get {
                return ResourceManager.GetString("Version_UpgradeFailed_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrading vault from version &apos;{0}&apos; to version &apos;{1}&apos; (current) has been successfully completed. Now you can proceed to working with the vault..
        /// </summary>
        public static string Version_UpgradeSucceeded {
            get {
                return ResourceManager.GetString("Version_UpgradeSucceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrade succeeded.
        /// </summary>
        public static string Version_UpgradeSucceeded_Title {
            get {
                return ResourceManager.GetString("Version_UpgradeSucceeded_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The vault you&apos;re opening has version &apos;{0}&apos; that doesn&apos;t match current version of the application (&apos;{1}&apos;). Do you wish to upgrade it?
        ///
        ///If you decline the upgrade, the vault will not be opened and you won&apos;t be able to work with it using the current version of the application.
        ///
        ///If you approve the upgrade, the vault will be converted to the new format, and its content will possibly undergo certain changes. However, before the upgrade the application will first make a backup of the vault, so not data will be [rest of string was truncated]&quot;;.
        /// </summary>
        public static string Version_UpgradeVaultToLatestVersion {
            get {
                return ResourceManager.GetString("Version_UpgradeVaultToLatestVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can only discard the last activated view. To deactivate this view, first discard all views that were activated prior to this one (they&apos;re displayed below in the &quot;Active&quot; section of the &quot;Views&quot; menu)..
        /// </summary>
        public static string Views_CanOnlyPopTopView_Message {
            get {
                return ResourceManager.GetString("Views_CanOnlyPopTopView_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string Views_CanOnlyPopTopView_Title {
            get {
                return ResourceManager.GetString("Views_CanOnlyPopTopView_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to History of previously opened views is corrupted and cannot be loaded.
        ///
        ///For now, DataVault editor can either proceed without loading any views and fix the history, or close the vault to avoid possible loss of data. Do you wish to continue working with the vault?.
        /// </summary>
        public static string Views_CorruptedViewNote_Message {
            get {
                return ResourceManager.GetString("Views_CorruptedViewNote_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string Views_CorruptedViewNote_Title {
            get {
                return ResourceManager.GetString("Views_CorruptedViewNote_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} (version {1}).
        /// </summary>
        public static string Views_MenuItem_Template {
            get {
                return ResourceManager.GetString("Views_MenuItem_Template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to History of previously opened views cannot be loaded. Editor doesn&apos;t support views with names &apos;{0}&apos;. Make sure that you have all plugins to DataVault.UI that were used to create the vault.
        ///
        ///For now, DataVault editor can either proceed without loading unsupported views and fix the history, or close the vault to avoid possible loss of data. Do you wish to continue working with the vault?.
        /// </summary>
        public static string Views_UnknownMultiple_Warning {
            get {
                return ResourceManager.GetString("Views_UnknownMultiple_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to History of previously opened views cannot be loaded. Editor doesn&apos;t support view with name &apos;{0}&apos;. Make sure that you have all plugins to DataVault.UI that were used to create the vault.
        ///
        ///For now, DataVault editor can either proceed without loading unsupported view and fix the history, or close the vault to avoid possible loss of data. Do you wish to continue working with the vault?.
        /// </summary>
        public static string Views_UnknownSingle_Warning {
            get {
                return ResourceManager.GetString("Views_UnknownSingle_Warning", resourceCulture);
            }
        }
    }
}
